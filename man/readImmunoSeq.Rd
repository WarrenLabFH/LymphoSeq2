% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readImmunoSeq.R
\name{readImmunoSeq}
\alias{readImmunoSeq}
\alias{getFileType}
\alias{getStandard}
\alias{getAIRRFields}
\title{Read ImmunoSeq files}
\usage{
readImmunoSeq(path, recursive = FALSE, threads = parallel::detectCores()/2)

getFileType(col_names)

getStandard(clone_file, progress, threads)

getAIRRFields(clone_file, threads)
}
\arguments{
\item{path}{Path to the directory containing tab-delimited files.  Only
files with the extension .tsv are imported.  The names of the data frames are
the same as names of the files.}

\item{recursive}{A logical value to indicate if all directory paths should
be listed recursively. TRUE will list recursively. Default is FALSE.}

\item{threads}{Number of threads for parallel processing. Default is half of
the number of available cores on the machine.}

\item{col_names}{A character vector of the column names of the input file.}

\item{clone_file}{.tsv file containing results from AIRRSeq pipeline}

\item{progress}{A progress bar to show status of conversion to
MiAIRR-compliant data.}
}
\value{
Returns a tibble with MiAIRR headers and repertoire_id

Returns "immunoSEQLegacy", "immunoSEQ", "10X", "BGI"

Tibble of given data with MiAIRR fields

Named vector of corresponding AIRR fields
}
\description{
Imports tab-separated value (.tsv) files exported by the Adaptive
Biotechnologies ImmunoSEQ analyzer, BGI IR-SEQ, MiXCR and stores
them as MiAIRR compliant tibble.
}
\section{Get file type}{


Retrives the file type
}

\section{Get standard headers}{


Converts AIRR-Seq data into MiAIRR compatible format
}

\section{Resolve file type from fields}{


Given the path to a single AIRRSeq clone file, determine the file type and
return a named vector that can be used to repair headers while reading input.
}

\examples{
file.path <- system.file("extdata", "TCRB_sequencing", package = "LymphoSeq2")

study_table <- readImmunoSeq(path = file.path, recursive = FALSE)

}
